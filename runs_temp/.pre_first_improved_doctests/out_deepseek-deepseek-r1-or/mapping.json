["<explanation>\nFacilitates communication with external systems by sending commands and handling responses. It includes methods for logging, file I/O, version checking, and program metadata retrieval through a structured command protocol.\n</explanation>\n<doctest-code>\n[] > doctest\n  seq > @\n    *\n      external.program-name\n      QQ.io.stdout > @\n        QQ.txt.sprintf \"%s\"\n          * external.program-name\n</doctest-code>\n<doctest-stdin>\nRequest: program-name\nmyapp\n</doctest-stdin>\n<doctest-output>\nmyapp\n</doctest-output>","<explanation>\nHandles persistent storage and retrieval of program data in a structured directory, including reading from and writing to files with versioned data.\n</explanation>\n<doctest-code>\n[] > doctest\n  program-data-storage > storage\n    \"state-dir\"\n  storage.read > data\n    \"branch-name\"\n    \"program-name\"\n  data.output-as-rss > @\n</doctest-code>\n<doctest-stdin>\n(lines: 0)\n</doctest-stdin>\n<doctest-output>\nRequest: read-file|||state-dir/branch-name/program-name\nRss:\n(lines: 10)\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?><rss version=\"2.0\">\n\n<channel>\n  <title>program-name versions</title>\n  <link>https://search.nixos.org/packages?channel=branch-name&amp;from=0&amp;size=50&amp;sort=relevance&amp;type=packages&amp;query=program-name</link>\n  <description>History of versions</description></channel>\n\n</rss>\n</doctest-output>","<explanation>\nRepresents program version data, constructs an RSS feed from versions, and manages version history updates. Contains branch name, program name, and version list. The output-as-rss method generates XML feed with version entries, while actualized method adds new versions if not duplicate.\n</explanation>\n<doctest-code>\n[] > doctest\n  program-data > @\n    \"nixos-unstable\"\n    \"firefox\"\n    *\n      program-version\n        \"121.0\"\n        1704067200\n      program-version\n        \"122.0\"\n        1706745600\n  output-as-rss > @\n</doctest-code>\n<doctest-stdin>\n</doctest-stdin>\n<doctest-output>\nRss:\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<rss version=\"2.0\">\n\n<channel>\n  <title>firefox versions</title>\n  <link>https://search.nixos.org/packages?channel=nixos-unstable&from=0&size=50&sort=relevance&type=packages&query=firefox</link>\n  <description>History of versions</description>\n  <item>\n    <title>121.0</title>\n    <link>https://search.nixos.org/packages?channel=nixos-unstable&from=0&size=50&sort=relevance&type=packages&query=firefox</link>\n    <description>New version at 1704067200</description>\n  </item>\n  <item>\n    <title>122.0</title>\n    <link>https://search.nixos.org/packages?channel=nixos-unstable&from=0&size=50&sort=relevance&type=packages&query=firefox</link>\n    <description>New version at 1706745600</description>\n  </item>\n</channel>\n\n</rss>\n</doctest-output>","<explanation>\nAdds a new version to the list only if it's not already the latest, preventing duplicate consecutive versions.\n</explanation>\n<doctest-code>\n[] > doctest\n  program-data > data\n    \"main\"\n    \"app\"\n    QQ.structs.list\n      program-version \"1.0\" 123\n  data.actualized > new-data\n    program-version \"1.1\" 456\n  new-data.output-as-rss > @\n</doctest-code>\n<doctest-stdin>\n</doctest-stdin>\n<doctest-output>\nRss:\n(lines: 20)\n<?xml version=\"1.0\" encoding<=\"UTF-8\" ?>\n<rss version=\"2.0\">\n\n<channel>\n  title>app versions</title>\n  <link>https://search.nixos.org/packages?channel=main&from=0&size=50&sort=relevance&type=packages&query=app</link>\n  <description>History of versions</description>\n  <item>\n    <title>1.0</title>\n    <link>https://search.nixos.org/packages?channel=main&from=0&size=50&sort=relevance&type=packages&query=app</link>\n    <description>New version at 123</description>\n  </item>\n  <item>\n    <title>1.1</title>\n    <link>https://search.nixos.org/packages?channel=main&from=0&size=50&sort=relevance&type=packages&query=app</link>\n    <description>New version at 456</description>\n  </item>\n</channel>\n\n</rss>\n</doctest-output>","<explanation>\nRepresents a program version with a version number string and a timestamp integer. Evaluates to the version number.\n</explanation>\n<doctest-code>\n[] > doctest\n  QQ.io.stdout > @\n    QQ.txt.sprintf\n      \"%s\"\n      *\n        program-version\n          \"1.2.3\"\n          1678901234\n</doctest-code>\n<doctest-stdin>\n</doctest-stdin>\n<doctest-output>\n1.2.3\n</doctest-output>","<explanation>\nFacade for external interactions, handling commands, logging, file I/O, and version/branch/program name retrieval through standardized input/output communication.\n</explanation>\n<doctest-code>\n[] > doctest\n  external.log > @\n    \"Test message\"\n</doctest-code>\n<doctest-stdin>\n</doctest-stdin>\n<doctest-output>\nLog:\n(lines: 1)\nTest message\n</doctest-output>"]